{"version":3,"sources":["Components/Button/Button.js","Components/Buttons/Buttons.js","Components/Content/Content.js","App.js","index.js"],"names":["Button","_ref","onClick","className","name","react_default","a","createElement","type","Buttons","handleReset","handleReverse","handleSortByLength","handleSort","handleWordLength","currentSelect","Fragment","Components_Button_Button","value","htmlFor","id","onChange","Content","goods","Components_Buttons_Buttons","map","item","key","goodsFromServer","App","state","isVisible","newGoods","concat","_this","setState","prevState","Object","toConsumableArray","reverse","sort","b","length","handleClick","target","filter","elem","_this$state","this","Components_Content_Content","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.e1d4a818.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick, className, name }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    className={className}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Buttons.scss';\nimport Button from '../Button/Button';\n\nconst Buttons = ({\n  handleReset,\n  handleReverse,\n  handleSortByLength,\n  handleSort,\n  handleWordLength,\n  currentSelect,\n}) => (\n  <>\n    <div className=\"container\">\n      <Button\n        type=\"button\"\n        className=\"button\"\n        onClick={handleReverse}\n        value={currentSelect}\n        name=\"Reverse\"\n      />\n      <Button\n        type=\"button\"\n        className=\"button\"\n        onClick={handleSortByLength}\n        name=\"Sort By length\"\n      />\n      <Button\n        type=\"button\"\n        className=\"button\"\n        onClick={handleSort}\n        name=\"Sort alhabetically\"\n      />\n      <Button\n        type=\"button\"\n        className=\"button\"\n        onClick={handleReset}\n        name=\"Reset\"\n      />\n    </div>\n    <div className=\"wrapper\">\n      <label\n        htmlFor=\"goodsLength\"\n        className=\"label\"\n      >\n        Good length:\n        {' '}\n      </label>\n      <select\n        name=\"select\"\n        id=\"goodsLength\"\n        onChange={handleWordLength}\n        value={currentSelect}\n      >\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n      </select>\n    </div>\n  </>\n);\n\nButtons.propTypes = {\n  handleReset: PropTypes.func.isRequired,\n  handleReverse: PropTypes.func.isRequired,\n  handleSortByLength: PropTypes.func.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleWordLength: PropTypes.func.isRequired,\n  currentSelect: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Content.scss';\nimport Buttons from '../Buttons/Buttons';\n\nconst Content = ({\n  handleReset,\n  handleReverse,\n  handleSortByLength,\n  handleSort,\n  handleWordLength,\n  goods,\n  currentSelect,\n}) => (\n  <>\n    <Buttons\n      currentSelect={currentSelect}\n      handleReset={handleReset}\n      handleReverse={handleReverse}\n      handleSortByLength={handleSortByLength}\n      handleSort={handleSort}\n      handleWordLength={handleWordLength}\n    />\n    <ul className=\"content\">\n      {goods.map(item => (\n        <li\n          key={item}\n          className=\"content__item\"\n        >\n          {item}\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nContent.propTypes = {\n  handleReset: PropTypes.func.isRequired,\n  handleReverse: PropTypes.func.isRequired,\n  handleSortByLength: PropTypes.func.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleWordLength: PropTypes.func.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentSelect: PropTypes.number.isRequired,\n};\n\nexport default Content;\n","import React from 'react';\nimport Button from './Components/Button/Button';\nimport Content from './Components/Content/Content';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    currentSelect: 1,\n    isVisible: true,\n    newGoods: [...goodsFromServer],\n  }\n\n  handleReset = () => this.setState(prevState => ({\n    goods: [...prevState.newGoods],\n    currentSelect: 1,\n  }));\n\n  handleReverse = () => this.setState(prevState => ({\n    goods: [...prevState.newGoods].reverse(),\n  }));\n\n  handleSort = () => this.setState(prevState => ({\n    goods: [...prevState.newGoods].sort(),\n  }));\n\n  handleSortByLength = () => this.setState(prevState => ({\n    goods: [...prevState.newGoods].sort((a, b) => a.length - b.length),\n  }));\n\n  handleClick = () => this.setState(prevState => ({\n    isVisible: !prevState.isVisible,\n  }));\n\n  handleWordLength = ({ target }) => {\n    const { value } = target;\n\n    this.setState(prevState => ({\n      currentSelect: value,\n      goods: [...prevState.newGoods]\n        .filter(elem => elem.length >= value),\n    }));\n  };\n\n  render() {\n    const {\n      isVisible,\n      goods,\n      currentSelect,\n    } = this.state;\n    const {\n      handleClick,\n      handleReset,\n      handleReverse,\n      handleSortByLength,\n      handleSort,\n      handleWordLength,\n    } = this;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          Goods\n          {' '}\n          {goodsFromServer.length}\n        </h1>\n        <Button\n          onClick={handleClick}\n          className={isVisible\n            ? 'button'\n            : 'button button--invisible'}\n          name=\"Show more\"\n        />\n        {!isVisible && (\n          <Content\n            handleReset={handleReset}\n            handleReverse={handleReverse}\n            handleSortByLength={handleSortByLength}\n            handleSort={handleSort}\n            handleWordLength={handleWordLength}\n            goods={goods}\n            currentSelect={currentSelect}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}